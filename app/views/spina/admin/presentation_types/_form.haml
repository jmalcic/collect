- if @presentation_type.errors.any?
  - content_for :notifications do
    .notification.notification-danger.animated.fadeInRight
      = icon('exclamation')
      .notification-message
        =t 'spina.notifications.alert'
        %small= @presentation_type.errors.full_messages.join('<br />').html_safe
      = link_to '#', data: { close_notification: true } do
        = icon('cross')

= form_for [:admin, @presentation_type], html: { autocomplete: "off" } do |f|
  %header#header
    = render partial: 'spina/admin/shared/breadcrumbs'

    #header_actions
      %button.button.button-primary{ type: 'submit' }
        = icon('check')
        =t 'spina.presentation_types.save'

      = link_to t('spina.cancel'), spina.admin_presentation_types_path, class: 'button', style: 'margin-right: 0'

  .well
    .horizontal-form
      .horizontal-form-group
        .horizontal-form-label
          = Spina::PresentationType.human_attribute_name :name
        .horizontal-form-content
          = f.text_field :name, placeholder: Spina::PresentationType.human_attribute_name(:name), required: true
      .horizontal-form-group
        .horizontal-form-label
          = Spina::PresentationType.human_attribute_name :duration
          %small= Spina::PresentationType.human_attribute_name :duration_description
        .horizontal-form-content
          = f.number_field :minutes, value: @presentation_type.minutes, placeholder: Spina::PresentationType.human_attribute_name(:duration), required: true, step: 5, min: 5

  - unless @presentation_type.new_record?
    .pull-right= link_to t('spina.permanently_delete'), admin_presentation_type_path(@presentation_type), method: :delete, data: { confirm: t('spina.presentation_types.delete_confirmation', presentation_type: @presentation_type.name) }, class: 'button button-link button-danger'
