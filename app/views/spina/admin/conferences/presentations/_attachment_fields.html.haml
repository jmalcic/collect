.structure-form-pane{ class: ('active' if (local_assigns[:active] == true) || (f.index == 0)), id: "structure_form_pane_#{f.index}", data: { 'spina--admin--conferences--presentation_attachments_form': { target: 'formPane' } } }
  .structure-form-part
    .horizontal-form-label
      = Spina::Admin::Conferences::PresentationAttachment.human_attribute_name :attachment_type
    .horizontal-form-content
      .select-dropdown
        = f.label :attachment_type, Spina::Admin::Conferences::PresentationAttachment.human_attribute_name(:attachment_type)
        = f.collection_select :attachment_type_id, Spina::Admin::Conferences::PresentationAttachmentType.all, :id, :name, {}, data: { action: 'spina--admin--conferences--presentation-attachments-form#updateType' }
  .structure-form-part
    .horizontal-form-label
      = Spina::Admin::Conferences::PresentationAttachment.human_attribute_name :attachment
    .horizontal-form-content
      = link_to select_admin_attachments_path(f.object_name, selected_attachment_id: f.object.attachment.try(:id), hidden_field_id: "presentation_attachments_attributes_#{f.index}_attachment_id"), remote: true, class: "media_picker" do
        .placeholder
          %span.button.button-small.button-round
            %i.icon.icon-dots
            = t('spina.choose_from_library')

        - if f.object.attachment && f.object.attachment.file.present?
          .attachment= f.object.attachment.name

        = f.hidden_field :attachment_id, data: { hidden_field_id: "presentation_attachments_attributes_#{f.index}_attachment_id" }

  = f.hidden_field :id

  = f.hidden_field :_destroy, data: { 'spina--admin--conferences--presentation_attachments_form_target': 'destroyField' }
  = button_tag t('spina.delete'), type: 'button', class: %w[button button-mini button-link pull-right], data: { action: 'spina--admin--conferences--presentation-attachments-form#removeForm' }
