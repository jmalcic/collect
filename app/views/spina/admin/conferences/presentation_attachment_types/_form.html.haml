- if @presentation_attachment_type.errors.any?
  - content_for :notifications do
    .notification.notification-danger.animated.fadeInRight
      = icon('exclamation')
      .notification-message
        = t 'spina.notifications.alert'
        %small
          - @presentation_attachment_type.errors.full_messages.each do |message|
            = message
            - unless @presentation_attachment_type.errors.full_messages[-1] == message
              %br
      = link_to '#', data: { close_notification: true } do
        = icon('cross')

= form_for @presentation_attachment_type, html: { autocomplete: 'off' } do |f|
  %header#header
    = render partial: 'spina/admin/shared/breadcrumbs'

    #header_actions
      %button.button.button-primary{ type: 'submit' }
        = icon('check')
        = t 'spina.conferences.presentation_attachment_types.save'

      = link_to t('spina.cancel'), spina.admin_conferences_presentation_attachment_types_path, class: 'button', style: 'margin-right: 0'

  .well
    .horizontal-form
      .horizontal-form-group
        .horizontal-form-label= Spina::Admin::Conferences::DietaryRequirement.human_attribute_name :name
        .horizontal-form-content= f.text_field :name, placeholder: Spina::Admin::Conferences::DietaryRequirement.human_attribute_name(:name), required: true

  - unless @presentation_attachment_type.new_record?
    .pull-right= link_to t('spina.permanently_delete'), admin_conferences_presentation_attachment_type_path(@presentation_attachment_type), method: :delete, data: { confirm: t('spina.conferences.presentation_attachment_types.delete_confirmation', presentation_attachment_type: @presentation_attachment_type.name) }, class: 'button button-link button-danger'
