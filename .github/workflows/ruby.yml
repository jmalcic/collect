name: Rails tests

on: [push]

env:
  LANG: en_GB.UTF-8
  TZ: Europe/London
  RACK_ENV: test
  RAILS_ENV: test
  RAILS_SERVE_STATIC_FILES: enabled
  PGHOST: 127.0.0.1
  PGUSER: postgres
  PGPASSWORD: postgres
  RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}

jobs:
  tests:
    name: Tests
    strategy:
      matrix:
        ruby-version: ['3.0', 2.7]
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    steps:
    - name: Check out repo
      uses: actions/checkout@v2
    - name: Install Postgres library
      run: sudo apt-get -yqq install libpq-dev
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby-version }}
        bundler-cache: true
    - name: Prepare database
      run: bundle exec rails db:setup
    - name: Precompile assets
      run: bundle exec rails app:assets:precompile
    - name: Test with Rake
      run: bundle exec rails t
    - name: Upload coverage to Coveralls
      uses: coverallsapp/github-action@v1.1.2
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        path-to-lcov: "./coverage/lcov/spina-admin-conferences.lcov"
  system_tests:
    name: System tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    steps:
    - name: Check out repo
      uses: actions/checkout@v2
    - name: Install Postgres library
      run: sudo apt-get -yqq install libpq-dev
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.0
        bundler-cache: true
    - name: Prepare database
      run: bundle exec rails db:setup
    - name: Precompile assets
      run: bundle exec rails app:assets:precompile
    - name: Set up BrowserStack environment
      uses: browserstack/github-actions/setup-env@v1.0.1
      with:
        username: ${{ secrets.BROWSERSTACK_USER }}
        access-key: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}
    - name: Start BrowserStack local
      uses: browserstack/github-actions/setup-local@v1.0.1
      with:
        local-testing: start
        local-identifier: random
    - name: Test with Rake
      run: bundle exec rails app:test:system
    - name: Stop BrowserStack local
      uses: browserstack/github-actions/setup-local@v1.0.1
      with:
        local-testing: stop
  visual_tests:
    name: Visual tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    steps:
    - name: Check out repo
      uses: actions/checkout@v2
    - name: Install Postgres library
      run: sudo apt-get -yqq install libpq-dev
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.0
        bundler-cache: true
    - name: Prepare database
      run: bundle exec rails db:setup
    - name: Precompile assets
      run: bundle exec rails app:assets:precompile
    - name: Test with Rake
      uses: percy/exec-action@v0.3.1
      with:
        command: bundle exec rails app:test:system
        silence: true
      env:
        PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
        BROWSERSTACK_USER: ${{ secrets.BROWSERSTACK_USER }}
        BROWSERSTACK_ACCESS_KEY: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}
