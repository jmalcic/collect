#presentation_details.tab-content.active
  .well
    .horizontal-form{ data: { controller: 'select-options', select_options: { config_value: '{ "admin_conferences_presentation_conference_id": { "value": "id", "text": "name" }, "admin_conferences_presentation_presentation_type_id": { "trigger": "admin_conferences_presentation_conference_id", "key": "presentation_types", "value": "id", "text": "name" }, "admin_conferences_presentation_date": { "trigger": "admin_conferences_presentation_conference_id", "key": "localized_dates", "value": "date", "text": "localization" }, "admin_conferences_presentation_room_use_id": { "trigger": "admin_conferences_presentation_presentation_type_id", "key": "room_uses", "value": "id", "text": "room_name" } }', records_values: @conferences } } }
      .horizontal-form-group
        .horizontal-form-label= Spina::Admin::Conferences::Presentation.human_attribute_name :conference
        .horizontal-form-content
          .select-dropdown= select_tag :admin_conferences_presentation_conference_id, options_from_collection_for_select(Spina::Admin::Conferences::Conference.sorted, :id, :name, (@presentation.conference.id unless @presentation.conference.blank?)), required: true, include_blank: true, data: { action: 'select-options#updateFilteredData' }

      .horizontal-form-group
        .horizontal-form-label= Spina::Admin::Conferences::Presentation.human_attribute_name :presentation_type
        .horizontal-form-content
          .select-dropdown= select_tag :admin_conferences_presentation_presentation_type_id, options_from_collection_for_select(Spina::Admin::Conferences::PresentationType.where(conference: @presentation.conference || Spina::Admin::Conferences::Conference.sorted.first), :id, :name, (@presentation.presentation_type.id unless @presentation.presentation_type.blank?)), { disabled: @presentation.presentation_type.blank?, required: true, include_blank: true, data: { action: 'select-options#updateFilteredData', select_options_target: 'select' } }

      .horizontal-form-group
        .horizontal-form-label= Spina::Admin::Conferences::Presentation.human_attribute_name :room_use
        .horizontal-form-content
          .select-dropdown= f.collection_select :room_use_id, Spina::Admin::Conferences::RoomUse.where(presentation_type: @presentation.presentation_type || Spina::Admin::Conferences::Conference.sorted.first.presentation_types.first), :id, :room_name, {}, { disabled: @presentation.room_use.blank?, required: true, include_blank: true, data: { select_options_target: 'select' } }

      .horizontal-form-group
        .horizontal-form-label= Spina::Admin::Conferences::Presentation.human_attribute_name :date
        .horizontal-form-content
          .select-dropdown= f.select :date, (@presentation.conference || Spina::Admin::Conferences::Conference.sorted.first).dates.collect { |date| [l(date, format: :short), date.strftime("%Y-%m-%d")] }, {}, { disabled: @presentation.date.blank?, required: true, data: { select_options_target: 'select' } }

      .horizontal-form-group
        .horizontal-form-label
          %small= Spina::Admin::Conferences::Presentation.human_attribute_name :start_time_description
          = Spina::Admin::Conferences::Presentation.human_attribute_name :start_time
        .horizontal-form-content= f.time_field :start_time, value: (@presentation.start_time.to_formatted_s(:time) unless @presentation.start_time.blank?), placeholder: Spina::Admin::Conferences::Presentation.human_attribute_name(:start_time), required: true

      .horizontal-form-group
        .horizontal-form-label= Spina::Admin::Conferences::Presentation.human_attribute_name :title
        .horizontal-form-content= f.text_field :title, placeholder: Spina::Admin::Conferences::Presentation.human_attribute_name(:title), required: true

      .horizontal-form-group
        .horizontal-form-label= Spina::Admin::Conferences::Presentation.human_attribute_name :abstract
        .horizontal-form-content= render 'spina/admin/shared/rich_text_field', f: f, field: :abstract

      .horizontal-form-group
        .horizontal-form-label
          %small= (Spina::Admin::Conferences::Presentation.human_attribute_name :presenters_description).try(:html_safe)
          = Spina::Admin::Conferences::Presentation.human_attribute_name :presenters
        .horizontal-form-content
          .multiple.select-dropdown= f.collection_select :presenter_ids, Spina::Admin::Conferences::Delegate.order(:last_name, :first_name), :id, :reversed_name_and_institution, {}, multiple: true, required: true

  - unless @presentation.new_record?
    .pull-right= link_to t('spina.permanently_delete'), admin_conferences_presentation_path(@presentation), method: :delete, data: { confirm: t('spina.conferences.presentations.delete_confirmation', presentation: @presentation.title) }, class: 'button button-link button-danger'
